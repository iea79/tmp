Acme\TaxiBundle\Entity\TaxiCompany:
   properties:
        name:
            - NotBlank: 
                groups: [ "flow_taxi_company_registration_step1"]
                message: fos_user.firstname.not_blank
 #       cars_amount:
            
            
DaVinci\TaxiBundle\Entity\User:
    properties:
        termsAccepted:
            - NotBlank: 
                message: fos_user.terms.not_blank
                groups: [ "flow_taxi_user_registration_step2"]
            - 'True': 
                groups: [ "flow_taxi_user_registration_step2"]
                message: fos_user.terms.not_blank
        firstname:   
            - NotBlank: 
                groups: [ "flow_taxi_user_registration_step1", "DaVinciProfile"]
                message: fos_user.firstname.not_blank
            - Length:
                min: 1
                minMessage: fos_user.firstname.short
                max: 255
                maxMessage: fos_user.firstname.long
                groups: [ "flow_taxi_user_registration_step1" ]
            - Regex:
                pattern: "/^[a-z ]+$/i"
                htmlPattern: "^[a-zA-Z ]+$"
                message: fos_user.firstname.latin
                groups: [ "flow_taxi_user_registration_step1" ]
        lastname:   
            - NotBlank: 
                groups: [ "flow_taxi_user_registration_step1", "DaVinciProfile"]
                message: fos_user.lastname.not_blank
            - Length:
                min: 1
                minMessage: fos_user.lastname.short
                max: 255
                maxMessage: fos_user.lastname.long
                groups: [ "flow_taxi_user_registration_step1" ]
            - Regex:
                pattern: "/^[a-z ]+$/i"
                htmlPattern: "^[a-zA-Z ]+$"
                message: fos_user.lastname.latin
                groups: [ "flow_taxi_user_registration_step1" ]
       # gender:
       #     - Choice: 
       #         choices: [0, 1]
       #         message:  fos_user.gender.valid
       #         groups: [ "flow_taxi_user_registration_step1" ]

            
# Note: We still want to validate the email
# See FOSUserBundle/Resources/config/validation/orm.xml to understand
# the UniqueEntity constraint that was originally applied to both
# username and email fields
#
# As you can see, we are only applying the UniqueEntity constraint to 
# the email field and not the username field.
FOS\UserBundle\Model\User:
    constraints:
        - Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity: 
             fields: email
             errorPath: email 
             message: fos_user.email.already_used
             groups: [ "flow_taxi_user_registration_step1", "DaVinciProfile" ]

    properties:
        plainPassword:
            - NotBlank:
                message: fos_user.password.blank
                groups: [ "flow_taxi_user_registration_step1", "ResetPassword", "ChangePassword" ]
            - Length:
                min: 3
                minMessage: fos_user.password.short
                groups: [ "flow_taxi_user_registration_step1", "DaVinciProfile", "ResetPassword", "ChangePassword"]

FOS\UserBundle\Model\Group:
    properties:
        name:
            - NotBlank:
                message: fos_user.group.blank
                groups: [ "DaVinciRegistration" ]
            - Length:
                min: 2
                minMessage: fos_user.group.short
                max: 255
                maxMessage: fos_user.group.long
                groups: [ "DaVinciRegistration" ]


FOS\UserBundle\Propel\Group:
    properties:
        name:
            - NotBlank:
                message: fos_user.group.blank
                groups: [ "DaVinciRegistration" ]
            - Length:
                min: 2
                minMessage: fos_user.group.short
                max: 255
                maxMessage: fos_user.group.long
                groups: [ "DaVinciRegistration" ]