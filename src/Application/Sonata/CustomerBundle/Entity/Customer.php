<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\CustomerBundle\Entity;

use Sonata\CustomerBundle\Entity\BaseCustomer as BaseCustomer;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Customer extends BaseCustomer
{
    /**
     * @var integer $id
     */
    protected $id;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $addresses;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $orders;

    /**
     * @var \DaVinci\UserBundle\Entity\User
     */
    protected $user;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->addresses = new \Doctrine\Common\Collections\ArrayCollection();
        $this->orders = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }
    
    /**
     * Add addresses
     *
     * @param \Application\Sonata\CustomerBundle\Entity\Address $addresses
     * @return Customer
     */
    public function addAddress(\Sonata\Component\Customer\AddressInterface $addresses)
    {
        $this->addresses[] = $addresses;

        return $this;
    }

    /**
     * Remove addresses
     *
     * @param \Application\Sonata\CustomerBundle\Entity\Address $addresses
     */
    public function removeAddress(\Sonata\Component\Customer\AddressInterface $addresses)
    {
        $this->addresses->removeElement($addresses);
    }

    /**
     * Get addresses
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getAddresses()
    {
        return $this->addresses;
    }

    /**
     * Add orders
     *
     * @param \Application\Sonata\OrderBundle\Entity\Order $orders
     * @return Customer
     */
    public function addOrder(\Application\Sonata\OrderBundle\Entity\Order $orders)
    {
        $this->orders[] = $orders;

        return $this;
    }

    /**
     * Remove orders
     *
     * @param \Application\Sonata\OrderBundle\Entity\Order $orders
     */
    public function removeOrder(\Application\Sonata\OrderBundle\Entity\Order $orders)
    {
        $this->orders->removeElement($orders);
    }

    /**
     * Get orders
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getOrders()
    {
        return $this->orders;
    }

    /**
     * Set user
     *
     * @param \DaVinci\UserBundle\Entity\User $user
     * @return Customer
     */
    public function setUser(\FOS\UserBundle\Model\UserInterface $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \DaVinci\UserBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }
}