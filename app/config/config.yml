imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enabled: true, enable_annotations: false }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    default_locale: en

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ DaVinciTaxiBundle, FOSUserBundle ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"
        types:
           json: Sonata\Doctrine\Types\JsonType
    orm:
       # entity_managers:
        #    default:
        #        mappings:
        #            DaVinciUserBundle: ~
         #           SonataUserBundle: ~
         #           FOSUserBundle: ~   

        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


sonata_admin:
    title:      ' '
    title_logo: bundles/davincitaxi/images/logo.png
    #templates:
    #        user_block: AcmeCoreBundle:Admin:admin_topnav.html.twig
    security:
        handler: sonata.admin.security.handler.acl
     # acl security information
        information:
            GUEST:    [VIEW, LIST]
            STAFF:    [EDIT, LIST, CREATE]
            EDITOR:   [OPERATOR, EXPORT]
            ADMIN:    [MASTER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]        

                
sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    class:
        user: DaVinci\TaxiBundle\Entity\User
        group: DaVinci\TaxiBundle\Entity\Group
    admin:
        user:
            class:      DaVinci\UserBundle\Model\UserAdmin
      
      
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.admin.block.search_result:
            contexts:   [admin]
            
            
        sonata_admin_doctrine_phpcr.tree_block:
                    settings:
                        id: '/cms'
                    contexts:   [admin]

        sonata.admin_doctrine_orm.block.audit:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.user.block.menu:
        # Some specific block from the SonataMediaBundle
        sonata.media.block.media:
        sonata.media.block.gallery:
        sonata.media.block.feature_media:
            
sonata_admin:
    dashboard:
        blocks:
            - { position: left, type: sonata_admin_doctrine_phpcr.tree_block }
            - { position: right, type: sonata.admin.block.admin_list }
            
doctrine_phpcr:
   # configure the PHPCR session
   session:
       backend: "%phpcr_backend%"
       workspace: "%phpcr_workspace%"
       username: "%phpcr_user%"
       password: "%phpcr_pass%"
   # enable the ODM layer
   odm:
       auto_mapping: true
       auto_generate_proxy_classes: "%kernel.debug%"
        
# app/config/config.yml
sonata_doctrine_phpcr_admin:
    document_tree_defaults: [locale]
    document_tree:
        Doctrine\ODM\PHPCR\Document\Generic:
            valid_children:
                - all
        Symfony\Cmf\Bundle\ContentBundle\Doctrine\Phpcr\StaticContent:
           valid_children:
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\SimpleBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ContainerBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ReferenceBlock
                - Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ActionBlock
        Symfony\Cmf\Bundle\BlockBundle\Doctrine\Phpcr\ReferenceBlock:
            valid_children: []
        # ...
        
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: DaVinci\TaxiBundle\Entity\User
    group:
        group_class:  DaVinci\TaxiBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)
    service:
            user_manager: custom_user_manager
    registration:
        form:
            type: taxi_user_registration
            #handler: taxi.registration.form.handler
            #validation_groups: [DaVinciRegistration]
            #seted in RegistrationController
        confirmation: 
            enabled: true 
    profile:
        form:
            type: taxi_user_profile
            validation_groups: [DaVinciProfile]

knp_menu:
    twig:
        template: DaVinciTaxiBundle:Menu:knp_menu.html.twig

parameters:
    api_caller.options:
        timeout: 10  # maximum transport + execution duration of the call in sec.
        ssl_verifypeer: false  # to stop cURL from verifying the peer's certificate.
        useragent: "TaxiMyPrice Caller"  # contents of the "User-Agent: " header.
        followlocation: true  # to follow any "Location: " header that the server sends.
        sslversion: 3  # set to 3 to avoid any bugs that relate to automatic version selection.
        fresh_connect: false  # set to true to force full reconnect every call.



sonata_seo:
    page:
        title: Taxi My Price
        metas:
            name:
                keywords: "taxi, your price, cheap, advance booking, book, exchange, travel, tourism"
                description: "Taxi my price"
#cmf_core:
#    multilang:
#        locales: %locales%
#    persistence:
#        phpcr:
#            enabled: true